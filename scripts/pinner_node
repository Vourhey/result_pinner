#!/usr/bin/env python3
import rospy

from ipfsapi import connect
from robonomics_msgs.msg import Result
from tempfile import NamedTemporaryFile, gettempdir
import os

class PinnerNode:
    def __init__(self):
        rospy.init_node("pinner")
        rospy.loginfo("Launching pinner node...")

        remote_ipfs_http_provider = rospy.get_param("~remote_ipfs_http_provider")
        local_ipfs_http_provider = rospy.get_param("~local_ipfs_http_provider")

        raddr, rport = self._extract_address_port(remote_ipfs_http_provider)
        self.ipfs_remote = connect(raddr, int(rport))

        laddr, lport = self._extract_address_port(local_ipfs_http_provider)
        self.ipfs_local = connect(laddr, int(lport))

        rospy.Subscriber('/liability/infochan/incoming/result', Result, self.pin)

        rospy.loginfo("The node is launched!")

    def _extract_address_port(self, address):
        parts = address.split(':')

        addr = ':'.join(parts[:2])
        port = parts[2]
        return (addr, port)

    def pin(self, result):
        mhash = result.result.multihash
        rospy.loginfo("Got result {}".format(mhash))

        tempdir = gettempdir()
        os.chdir(tempdir)

        self.ipfs_local.get(mhash)
        rospy.loginfo("Downloaded to local...")

        self.ipfs_remote.add(mhash)
        rospy.loginfo("Added to remote...")

        pins = self.ipfs_remote.pin_add(result.result.multihash)

        rospy.loginfo("Pinned {}".format(pins))

    def spin(self):
        rospy.spin()


if __name__ == "__main__":
    PinnerNode().spin()

