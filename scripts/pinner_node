#!/usr/bin/env python3
import rospy

from ipfsapi import connect
from robonomics_msgs.msg import Result
from tempfile import NamedTemporaryFile, gettempdir
import os
import requests
from datetime import datetime


class PinnerNode:
    def __init__(self):
        rospy.init_node("pinner")
        rospy.loginfo("Launching pinner node...")

        self.username = rospy.get_param("~temporal_user")
        self.password = rospy.get_param("~temporal_password")

        self.expire, self.auth = self.get_auth_token()
        rospy.loginfo(f"Expire: {self.expire}\nToken: {self.auth}")

        rospy.Subscriber('/liability/infochan/incoming/result', Result, self.pin)

        rospy.loginfo("The node is launched!")

    def get_auth_token(self) -> (datetime, str):
        url = "https://api.temporal.cloud/v2/auth/login"

        data = {
                "username": self.username,
                "password": self.password
                }

        r1 = requests.post(url, json=data)

        resp = r1.json()

        return (datetime.fromisoformat(resp["expire"][:-1]), resp["token"])

    def pin(self, result):
        mhash = result.result.multihash
        rospy.loginfo("Got result {}".format(mhash))

        if datetime.now() > self.expire:
            self.expire, self.auth = self.get_auth_token()

        url = f"https://api.temporal.cloud/v2/ipfs/public/pin/{mhash}"
        headers = {
                "Content-Type": "multipart/form-data",
                "Authorization": f"Bearer {self.auth}"
                }

        r = requests.post(url, files={"hold_time": 1}, headers=headers)

        rospy.loginfo(r.text)
        rospy.loginfo("Pinned")

    def spin(self):
        rospy.spin()


if __name__ == "__main__":
    PinnerNode().spin()

